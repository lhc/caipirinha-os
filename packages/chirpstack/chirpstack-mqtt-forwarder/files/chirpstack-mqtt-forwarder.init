#!/bin/sh /etc/rc.common

START=99
STOP=99

USE_PROCD=1
PACKAGE_NAME=chirpstack-mqtt-forwarder

conf_rule_mqtt() {
	local cfg="$1"
	local topic_prefix json server username password qos clean_session client_id ca_cert tls_cert tls_key

	config_get topic_prefix $cfg topic_prefix
	config_get json $cfg json
	config_get server $cfg server
	config_get username $cfg username
	config_get password $cfg password
	config_get qos $cfg qos
	config_get_bool clean_session $cfg clean_session
	config_get client_id $cfg client_id
	config_get ca_cert $cfg ca_cert
	config_get tls_cert $cfg tls_cert
	config_get tls_key $cfg tls_key

	if [ "$json" = "1" ]; then
		json="true"
	else
		json="false"
	fi

	if [ "$clean_session" = "1" ]; then
		clean_session="true"
	else
		clean_session="false"
	fi

	if [ "$ca_cert" != "" ]; then
		echo "$ca_cert" > /var/etc/chirpstack-mqtt-forwarder/ca.pem
		ca_cert="/var/etc/chirpstack-mqtt-forwarder/ca.pem"
	fi

	if [ "$tls_cert" != "" ]; then
		echo "$tls_cert" > /var/etc/chirpstack-mqtt-forwarder/cert.pem
		tls_cert="/var/etc/chirpstack-mqtt-forwarder/cert.pem"
	fi

	if [ "$tls_key" != "" ]; then
		echo "$tls_key" > /var/etc/chirpstack-mqtt-forwarder/key.pem
		tls_key="/var/etc/chirpstack-mqtt-forwarder/key.pem"
	fi

	cat >> /var/etc/$PACKAGE_NAME/$PACKAGE_NAME.toml <<- EOF
		[mqtt]
			topic_prefix="$topic_prefix"
			json=$json
			server="$server"
			username="$username"
			password="$password"
			qos=$qos
			clean_session=$clean_session
			client_id="$client_id"
			ca_cert="$ca_cert"
			tls_cert="$tls_cert"
			tls_key="$tls_key"
	EOF
}

configuration() {
	mkdir -p /var/etc/$PACKAGE_NAME
	echo "" > /var/etc/$PACKAGE_NAME/$PACKAGE_NAME.toml

	cat >> /var/etc/$PACKAGE_NAME/$PACKAGE_NAME.toml <<- EOF
		[logging]
			log_to_syslog=true
		
		[backend]
			enabled="concentratord"
	EOF

	config_load "$PACKAGE_NAME"
	config_foreach conf_rule_mqtt "mqtt"
}

start_service() {
	configuration

	procd_open_instance
	procd_set_param command /usr/bin/$PACKAGE_NAME -c /var/etc/$PACKAGE_NAME/$PACKAGE_NAME.toml
	procd_set_param respawn 3600 5 -1
	procd_set_param file /etc/config/$PACKAGE_NAME
	procd_close_instance
}

service_triggers() {
	procd_add_reload_trigger "$PACKAGE_NAME"
}

reload_service() {
	stop
	start
}